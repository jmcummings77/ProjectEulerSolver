using ProjectEulerSolver.Interfaces;
using ProjectEulerSolver.Tools;
using ProjectEulerSolver.Model;
using System.Numerics;
using System;
using System.Collections.Generic;
using System.Linq;
using System.IO;
using System.Threading.Tasks;

namespace ProjectEulerSolver.Problems
{
    public class Problem45 : BaseProblem, IProblem
    {
        public Problem45()
        {
            Number = 45;
            Prompt = "Triangle, pentagonal, and hexagonal numbers are generated by the following formulae: " +
                        "Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ... " +
                        "Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ... " +
                        "Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ... " +
                        "It can be verified that T285 = P165 = H143 = 40755. " +
                        "Find the next triangle number that is also pentagonal and hexagonal.";

        }
        public override void Solve()
        {
            bool NoMatch = true;
            UInt64 i = 286;
            UInt64 result = 0;
            while(NoMatch)
            {
                UInt64 triangleNumber = (i * (i + (UInt64)1)) / (UInt64)2;
                Console.WriteLine(triangleNumber);
                if(IsPentagonNumber(triangleNumber) && IsHexagonNumber(triangleNumber))
                {
                    result = triangleNumber;
                    NoMatch = false;
                    break;
                }
                i++;
            }
            Output = result.ToString();
        }
        private static bool IsPentagonNumber(UInt64 Value)
        {
            double n = (1 + Math.Sqrt(24 * Value + 1)) / 6;
            return (Math.Floor(n) == n);
        }
        private static bool IsHexagonNumber(UInt64 Value)
        {
            double n = (1 + Math.Sqrt(8 * Value + 1)) / 4;
            return (Math.Floor(n) == n);
        }
    }
}